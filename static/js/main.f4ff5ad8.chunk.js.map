{"version":3,"sources":["store/actions/actions.ts","store/reducers/changePlacesPopupInputsReducer.ts","store/reducers/placesServerDataReducer.ts","store/reducers/changeUserPopupInputsReducer.ts","store/reducers/userStorageDataReducer.ts","store/reducers/rootReducer.ts","services/api.service.ts","store/actionCreators/actionCreators.ts","services/localStorage.service.ts","store/sagas.ts","store/store.ts","images/logo3.svg","components/Header/Header.tsx","images/avatar.jpg","components/Profile/Profile.tsx","images/preloader-red.svg","components/Popups/ImagePopup/ImagePopup.tsx","images/preloader-black.svg","components/Popups/DeleteAlertPopup/DeleteAlertPopup.tsx","components/Card/Card.tsx","components/CardList/CardList.tsx","images/preloader-white.svg","components/Popups/AddCardPopupForm/AddCardPopupForm.tsx","components/Popups/AddCardPopup/AddCardPopup.tsx","components/Popups/EditUserPopupForm/EditUserPopupForm.tsx","components/Popups/EditUserPopup/EditUserPopup.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CHANGE_PLACE_LINK_INPUT_ACTION","CHANGE_PLACE_NAME_INPUT_ACTION","FETCH_DATA_ACTION","LOAD_DATA_ACTION","CHANGE_USER_NAME_INPUT_ACTION","CHANGE_USER_JOB_INPUT_ACTION","FETCH_STORAGE_DATA_ACTION","LOAD_STORAGE_DATA_ACTION","initialState","placeName","placePhotoLink","changePlacesPopupInputsReducer","state","action","type","payload","places","placesServerDataReducer","userName","userJob","changeUserPopupInputsReducer","user","name","job","userStorageDataReducer","rootReducer","combineReducers","cardData","placesServerData","userData","userStorageData","baseUrl","fetchDB","url","options","a","fetch","response","ok","Promise","reject","status","json","getDataFromDB","method","headers","putDataToDB","place","body","JSON","stringify","deleteDataToDB","patchLikesDataToDB","count","likesCount","convertFbObjectToArray","data","Object","keys","map","key","id","changePlaceNameInputAC","value","changePlaceLinkInputAC","fetchDataAC","loadDataAC","changeUserNameInputAC","changeUserJobInputAC","loadStorageDataAC","getDataFromLocalStorage","localStorage","getItem","parse","loadDataWorker","watchPlacesLoadData","loadStorageDataWorker","watchStorageLoadData","call","put","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","run","Header","className","src","logo","alt","connect","props","cardPopupVisible","userPopupVisible","avatar","onClick","ImagePopup","link","onShow","changeImagePopupVisible","popupClasses","cn","imagePopup","DeleteAlertPopup","alertPopupVisible","useState","isFetching","setIsFetching","handleConfirmDeleteButtonClick","event","target","closest","dispatch","alertPopup","preloader","Card","isShown","setIsShown","handleLikeButtonClick","newLikesCount","likesCountShow","likeIconIsLiked","card","AddCardPopupForm","changePlaceName","changePlacePhotoLink","isDirty","setIsDirty","isError","setIsError","isValid","setIsValid","useEffect","blurHandler","handleInputChange","test","handleFormSubmit","preventDefault","date","Date","toLocaleDateString","onSubmit","noValidate","onChange","onBlur","placeholder","disabled","bindActionCreators","cardPopup","changeUserName","changeUserJob","setItem","userPopup","App","addCardPopupVisible","editUserPopupVisible","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4ff5ad8.chunk.js","sourcesContent":["export const CHANGE_PLACE_LINK_INPUT_ACTION = 'FORMS/CHANGE_PLACE_LINK_INPUT_ACTION';\nexport const CHANGE_PLACE_NAME_INPUT_ACTION = 'FORMS/CHANGE_PLACE_NAME_INPUT_ACTION';\nexport const FETCH_DATA_ACTION = 'CARD/FETCH_DATA_ACTION';\nexport const LOAD_DATA_ACTION = 'CARD/LOAD_DATA_ACTION';\n\nexport const CHANGE_USER_NAME_INPUT_ACTION = 'FORMS/CHANGE_USER_NAME_INPUT_ACTION';\nexport const CHANGE_USER_JOB_INPUT_ACTION = 'FORMS/CHANGE_USER_JOB_INPUT_ACTION';\nexport const FETCH_STORAGE_DATA_ACTION = 'USER/FETCH_STORAGE_DATA_ACTION';\nexport const LOAD_STORAGE_DATA_ACTION = 'USER/LOAD_STORAGE_DATA_ACTION';","import {IAction, ICardFormState} from \"../../interfaces/interfaces\";\nimport {\n  CHANGE_PLACE_LINK_INPUT_ACTION,\n  CHANGE_PLACE_NAME_INPUT_ACTION,\n} from '../actions/actions';\n\nconst initialState: ICardFormState = {\n  placeName: '',\n  placePhotoLink: '',\n};\n\nconst changePlacesPopupInputsReducer = (state = initialState, action: IAction) => {\n  switch (action.type) {\n    case CHANGE_PLACE_NAME_INPUT_ACTION:\n      return {...state, placeName: action.payload};\n    case CHANGE_PLACE_LINK_INPUT_ACTION:\n      return {...state, placePhotoLink: action.payload};\n    default:\n      return state;\n  }\n};\n\nexport default changePlacesPopupInputsReducer;","import {IAction, ICardsDataState} from '../../interfaces/interfaces';\nimport {FETCH_DATA_ACTION} from '../actions/actions';\n\nconst initialState: ICardsDataState = {\n  places: [],\n};\n\nconst placesServerDataReducer = (state: ICardsDataState = initialState, action: IAction) => {\n  switch (action.type) {\n    case FETCH_DATA_ACTION:\n      return {...state, places: action.payload};\n    default:\n      return state;\n  }\n};\n\nexport default placesServerDataReducer;\n","import {IAction, IUserFormState} from '../../interfaces/interfaces';\nimport {\n  CHANGE_USER_NAME_INPUT_ACTION,\n  CHANGE_USER_JOB_INPUT_ACTION,\n} from '../actions/actions';\n\nconst initialState: IUserFormState = {\n  userName: '',\n  userJob: '',\n};\n\nconst changeUserPopupInputsReducer = (state = initialState, action: IAction) => {\n  switch (action.type) {\n    case CHANGE_USER_NAME_INPUT_ACTION:\n      return {...state, userName: action.payload};\n    case CHANGE_USER_JOB_INPUT_ACTION:\n      return {...state, userJob: action.payload};\n    default:\n      return state;\n  }\n};\n\nexport default changeUserPopupInputsReducer;","import {IAction, IUserDataState} from '../../interfaces/interfaces';\nimport {FETCH_STORAGE_DATA_ACTION} from '../actions/actions';\n\nconst initialState: IUserDataState = {\n  user: {\n    name: '',\n    job: '',\n  },\n};\n\nconst userStorageDataReducer = (state: IUserDataState = initialState, action: IAction) => {\n  switch (action.type) {\n    case FETCH_STORAGE_DATA_ACTION:\n      return {...state, user: action.payload};\n    default:\n      return state;\n  }\n};\n\nexport default userStorageDataReducer;\n","import {combineReducers} from 'redux';\nimport changePlacesPopupInputsReducer from './changePlacesPopupInputsReducer';\nimport placesServerDataReducer from './placesServerDataReducer';\nimport changeUserPopupInputsReducer from './changeUserPopupInputsReducer';\nimport userStorageDataReducer from './userStorageDataReducer';\n\nconst rootReducer = combineReducers({\n  cardData: changePlacesPopupInputsReducer,\n  placesServerData: placesServerDataReducer,\n  userData: changeUserPopupInputsReducer,\n  userStorageData: userStorageDataReducer\n});\n\nexport default rootReducer;","const baseUrl = 'https://vmesto-project-default-rtdb.firebaseio.com'\n\nconst fetchDB = async (url: string, options: object): Promise<any> => {\n  const response = await fetch(url, options)\n  if (!response.ok) {\n    return Promise.reject(`Неверный запрос. Ошибка: ${response.status}`);\n  }\n  return await response.json();\n}\n\nexport const getDataFromDB = async () => {\n  return await fetchDB(`${baseUrl}/places.json`, {\n    method: 'GET',\n    headers: {'Content-Type': 'application/json'},\n  })\n}\n\nexport const putDataToDB = async (place: object) => {\n  return await fetchDB(`${baseUrl}/places.json`,{\n    method: 'POST',\n    body: JSON.stringify(place),\n    headers: {'Content-Type': 'application/json'},\n  })\n}\n\nexport const deleteDataToDB = async (place: string) => {\n  return await fetchDB(`${baseUrl}/places/${place}.json`,{\n    method: 'DELETE',\n    headers: {'Content-Type': 'application/json'},\n  })\n}\n\nexport const patchLikesDataToDB = async (place: string, count: number) => {\n  return await fetchDB(`${baseUrl}/places/${place}.json`,{\n    method: 'PATCH',\n    body: JSON.stringify({likesCount: count}),\n    headers: {'Content-Type': 'application/json'},\n  })\n}\n\nexport const convertFbObjectToArray = async () => {\n  const data = await getDataFromDB();\n  if (data !== null) {\n    return Object.keys(data).map((key: string) => {\n      const place = data[key];\n      place.id = key;\n      return place;\n    });\n  } else return [];\n};\n","import {ICardsDataState, IUserDataState} from '../../interfaces/interfaces';\nimport {\n  CHANGE_PLACE_LINK_INPUT_ACTION,\n  CHANGE_PLACE_NAME_INPUT_ACTION,\n  FETCH_DATA_ACTION,\n  LOAD_DATA_ACTION,\n  CHANGE_USER_JOB_INPUT_ACTION,\n  CHANGE_USER_NAME_INPUT_ACTION,\n  FETCH_STORAGE_DATA_ACTION,\n  LOAD_STORAGE_DATA_ACTION,\n} from '../actions/actions';\n\nexport const changePlaceNameInputAC = (value: string) => {\n  return {\n    type: CHANGE_PLACE_NAME_INPUT_ACTION,\n    payload: value,\n  };\n};\n\nexport const changePlaceLinkInputAC = (value: string) => {\n  return {\n    type: CHANGE_PLACE_LINK_INPUT_ACTION,\n    payload: value,\n  };\n};\n\nexport const fetchDataAC = (data: ICardsDataState) => {\n  return {\n    type: FETCH_DATA_ACTION,\n    payload: data,\n  };\n};\n\nexport const loadDataAC = () => {\n  return {\n    type: LOAD_DATA_ACTION,\n  };\n};\n\n\nexport const changeUserNameInputAC = (value: string) => {\n  return {\n    type: CHANGE_USER_NAME_INPUT_ACTION,\n    payload: value,\n  };\n};\n\nexport const changeUserJobInputAC = (value: string) => {\n  return {\n    type: CHANGE_USER_JOB_INPUT_ACTION,\n    payload: value,\n  };\n};\n\nexport const fetchStorageDataAC = (data: IUserDataState) => {\n  return {\n    type: FETCH_STORAGE_DATA_ACTION,\n    payload: data\n  };\n};\n\nexport const loadStorageDataAC = () => {\n  return {\n    type: LOAD_STORAGE_DATA_ACTION,\n  };\n};\n","export const setDataToLocalStorage = (name: string, job: string) => {\n  localStorage.setItem('user', JSON.stringify({name, job}));\n};\n\nexport const getDataFromLocalStorage = () => {\n  const json: any = localStorage.getItem('user');\n  if (json !== null) {\n    return JSON.parse(json);\n  }\n  else return {name: '', job: ''}\n};","import {call, put, takeEvery} from 'redux-saga/effects';\nimport {convertFbObjectToArray} from '../services/api.service';\nimport {fetchDataAC, fetchStorageDataAC} from './actionCreators/actionCreators';\nimport {LOAD_DATA_ACTION, LOAD_STORAGE_DATA_ACTION} from './actions/actions';\nimport {getDataFromLocalStorage} from '../services/localStorage.service';\n\nfunction* loadDataWorker() {\n  const data = yield call(convertFbObjectToArray);\n  yield put(fetchDataAC(data));\n}\n\nexport function* watchPlacesLoadData() {\n  yield takeEvery(LOAD_DATA_ACTION, loadDataWorker);\n}\n\nfunction* loadStorageDataWorker() {\n  const userData = yield call(getDataFromLocalStorage);\n  yield put(fetchStorageDataAC(userData))\n}\n\nexport function* watchStorageLoadData() {\n  yield takeEvery(LOAD_STORAGE_DATA_ACTION, loadStorageDataWorker);\n}\n","import {applyMiddleware, compose, createStore} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers/rootReducer';\n// import logger from 'redux-logger';\nimport {watchPlacesLoadData, watchStorageLoadData} from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, compose(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(watchPlacesLoadData);\nsagaMiddleware.run(watchStorageLoadData);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/logo3.d9949e2d.svg\";","import './Header.css';\nimport logo from '../../images/logo3.svg';\n\nimport React from 'react';\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"header root__section\">\n      <img src={logo} alt=\"Logo\" className=\"logo\"/>\n    </header>\n  );\n};\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/avatar.6a14390a.jpg\";","import './Profile.css';\nimport avatar from '../../images/avatar.jpg';\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\ninterface MyProps {\n  cardPopupVisible(): void\n  userPopupVisible(): void\n  user: {\n    [key: string]: string\n  }\n}\n\nconst Profile: React.FC<MyProps> = (props) => {\n\n  const {name, job} = props.user\n\n  const {cardPopupVisible, userPopupVisible} = props;\n\n  const handleCardPopupOpen = () => {\n    cardPopupVisible();\n  };\n\n  const handleUserPopupOpen = () => {\n    userPopupVisible();\n  };\n\n  return (\n    <div className='profile root__section'>\n      <div className='user-info'>\n        <img src={avatar} alt='Avatar' className='user-info__photo'/>\n        <div className='user-info__data'>\n          <h1 className='user-info__name'>\n            {name !== '' ? name : 'Иван Сусанин'}\n          </h1>\n          <p className='user-info__job'>\n            {job !== '' ? job : 'Волонтёр, проводник'}\n          </p>\n          <button onClick={handleUserPopupOpen} className=\"button button__edit-profile\">Редактировать</button>\n        </div>\n        <button onClick={handleCardPopupOpen} className='button button__add-card'>\n          <i className='material-icons'>add</i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    user: state.userStorageData.user\n  }\n}\n\nexport default connect(mapStateToProps)(Profile);","export default __webpack_public_path__ + \"static/media/preloader-red.208e6506.svg\";","import '../PopupStyles/PopupStyles.css';\n\nimport React from \"react\";\nimport cn from \"classnames\";\n\ninterface IImagePopupProps {\n  link: string\n  name: string\n  onShow: { imagePopup: boolean };\n  changeImagePopupVisible(): void\n}\n\nconst ImagePopup: React.FC<IImagePopupProps> = (props) => {\n\n  const {link, name, onShow, changeImagePopupVisible} = props\n\n  const handlePopupClose = () => {\n    changeImagePopupVisible()\n  };\n\n  const popupClasses = cn(\n    'popup', {\n      'popup_is-shown': onShow.imagePopup,\n    },\n  );\n\n  return (\n    <div className={popupClasses}>\n      <div className=\"popup-card\">\n        <img src={link} alt={name} className=\"popup-card__image\"/>\n        <i onClick={handlePopupClose} className='material-icons popup__close'>clear</i>\n      </div>\n    </div>\n  );\n};\n\nexport default ImagePopup;","export default __webpack_public_path__ + \"static/media/preloader-black.f35913f9.svg\";","import '../PopupStyles/PopupStyles.css';\n\nimport preloader from '../../../images/preloader-black.svg';\n\nimport React, {useState} from 'react';\nimport cn from \"classnames\";\n\nimport store from \"../../../store/store\";\nimport {deleteDataToDB} from \"../../../services/api.service\";\nimport {IAction} from \"../../../interfaces/interfaces\";\nimport {loadDataAC} from \"../../../store/actionCreators/actionCreators\";\n\ninterface IAlertPopupProps {\n  onShow: { alertPopup: boolean };\n  alertPopupVisible(): void\n}\n\nconst dispatch = (action: IAction) => store.dispatch(action);\n\nconst DeleteAlertPopup: React.FC<IAlertPopupProps> = (props) => {\n\n  const {onShow, alertPopupVisible} = props;\n\n  const [isFetching, setIsFetching] = useState<boolean>(false)\n\n  const handleConfirmDeleteButtonClick = async (event: React.BaseSyntheticEvent) => {\n    setIsFetching(true)\n    await deleteDataToDB(event.target.closest('.place-card').id);\n    dispatch(loadDataAC());\n    alertPopupVisible();\n    setIsFetching(false)\n  };\n\n  const handleAbortDeleteButtonClick = () => {\n    alertPopupVisible()\n  }\n\n  const popupClasses = cn(\n    'popup', {\n      'popup_is-shown': onShow.alertPopup,\n    },\n  );\n\n  return (\n    <div className={popupClasses}>\n      <div className='popup__content'>\n        <p className='popup__text'>Выбранная карточка будет удалена</p>\n        <div className=\"popup__preloader-wrapper\">\n          { isFetching && <img src={preloader} alt='Preloader' /> }\n        </div>\n        <div className='popup__button-wrapper'>\n          <button\n            onClick={handleConfirmDeleteButtonClick}\n            className='button popup__button'>OK</button>\n          <button\n            onClick={handleAbortDeleteButtonClick}\n            className='button popup__button'>Отмена</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteAlertPopup;","import './Card.css';\nimport cn from 'classnames';\n\nimport preloader from '../../images/preloader-red.svg'\n\nimport React, {useState} from 'react';\nimport store from \"../../store/store\";\nimport {IAction, ICardData} from '../../interfaces/interfaces';\nimport { patchLikesDataToDB} from \"../../services/api.service\";\nimport {loadDataAC} from \"../../store/actionCreators/actionCreators\";\nimport ImagePopup from \"../Popups/ImagePopup/ImagePopup\";\nimport DeleteAlertPopup from \"../Popups/DeleteAlertPopup/DeleteAlertPopup\";\n\ntype TProps = { data: ICardData }\n\ntype TUseState = {\n  imagePopup: boolean\n  alertPopup: boolean\n}\n\nconst dispatch = (action: IAction) => store.dispatch(action);\n\nconst Card: React.FC<TProps> = (props) => {\n\n  const {placeName, placePhotoLink, id, likesCount} = props.data;\n\n  const [isShown, setIsShown] = useState<TUseState>({imagePopup: false, alertPopup: false});\n  const [isFetching, setIsFetching] = useState<boolean>(false);\n\n  const changeImagePopupVisible = () => {\n    !isShown.imagePopup\n      ? setIsShown({...isShown, imagePopup: true})\n      : setIsShown({...isShown, imagePopup: false});\n  }\n\n  const alertPopupVisible = () => {\n    !isShown.alertPopup\n      ? setIsShown({...isShown, alertPopup: true})\n      : setIsShown({...isShown, alertPopup: false});\n  }\n\n  const handleDeleteButtonClick = () => {\n    alertPopupVisible();\n  };\n\n  const handleLikeButtonClick = async (event: React.BaseSyntheticEvent) => {\n    const count = 1;\n    let newLikesCount = likesCount + count;\n    setIsFetching(true)\n    await patchLikesDataToDB(event.target.closest('.place-card').id, newLikesCount);\n    dispatch(loadDataAC());\n    setIsFetching(false)\n  };\n\n  const handleImageClick = () => {\n    changeImagePopupVisible()\n  };\n\n  const likesCountShow = cn(\n    'place-card__like-count', {\n      'place-card__like-count_show': likesCount !== 0,\n    },\n  );\n\n  const likeIconIsLiked = cn(\n    'material-icons', {\n      'place-card__like-icon_is-liked': likesCount !== 0,\n    },\n  );\n\n  return (\n    <div className='place-card' id={id}>\n      <div className='place-card__image-container'>\n        <img\n          onClick={handleImageClick}\n          className='place-card__image'\n          src={placePhotoLink}\n          alt={placeName}\n        />\n        <button\n          onClick={handleDeleteButtonClick}\n          className='place-card__delete-icon'\n        >\n          <i className='material-icons'>delete</i>\n        </button>\n      </div>\n      <div className='place-card__description'>\n        <h3 className='place-card__name'>{placeName}</h3>\n        <div className='place-card__likes-wrapper'>\n          <button\n            onClick={handleLikeButtonClick}\n            className='place-card__like-icon'\n          >\n            { isFetching\n              ? <img src={preloader} alt='Preloader'/>\n              : <i className={likeIconIsLiked}>\n                {\n                  likesCount === 0 ? 'favorite_border' : 'favorite'\n                }</i> }\n          </button>\n          <p className={likesCountShow}>{likesCount}</p>\n        </div>\n      </div>\n      <ImagePopup\n        link={placePhotoLink}\n        name={placeName}\n        onShow={isShown}\n        changeImagePopupVisible={changeImagePopupVisible}\n      />\n      <DeleteAlertPopup onShow={isShown} alertPopupVisible={alertPopupVisible} />\n    </div>\n  );\n};\n\nexport default Card;\n","import './CardList.css';\nimport React from 'react';\nimport {ICardData, ICardsDataState} from '../../interfaces/interfaces';\nimport Card from '../Card/Card';\nimport {connect} from 'react-redux';\n\ninterface IMyState {\n  placesServerData: ICardsDataState;\n}\n\ninterface IMyProps {\n  places: Array<ICardData>;\n}\n\nconst CardList: React.FC<IMyProps> = ({places} ) => {\n\n  return (\n    <div className='places-list root__section'>\n      {places.map((card: ICardData) => (\n        <Card data={card} key={card.id}/>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IMyState) => {\n  return {\n    places: state.placesServerData.places,\n  };\n};\n\nexport default connect(mapStateToProps)(CardList);\n","export default __webpack_public_path__ + \"static/media/preloader-white.02b4291a.svg\";","import React, {useEffect, useState} from 'react';\n\nimport preloader from '../../../images/preloader-white.svg';\n\nimport store from '../../../store/store';\nimport {putDataToDB} from '../../../services/api.service';\nimport {loadDataAC} from '../../../store/actionCreators/actionCreators';\n\ninterface IPopupProps {\n  data: {\n    placeName: string;\n    placePhotoLink: string;\n    changePlaceName(arg: string): void;\n    changePlacePhotoLink(arg: string): void;\n    cardPopupVisible(): void;\n  },\n}\n\nconst dispatch = (action: any) => store.dispatch(action);\n\nconst AddCardPopupForm: React.FC<IPopupProps> = (props) => {\n\n  const {\n    placeName,\n    placePhotoLink,\n    changePlaceName,\n    changePlacePhotoLink,\n    cardPopupVisible,\n  } = props.data;\n\n  const [isDirty, setIsDirty] = useState<{ [key: string]: boolean }>({name: false, link: false});\n  const [isError, setIsError] = useState<{ [key: string]: string }>({name: 'Поле должно содержать слово', link: 'Поле должно содержать ссылку'});\n  const [isValid, setIsValid] = useState<boolean>(false)\n\n  useEffect(() => {\n    (isError.name || isError.link)\n      ? setIsValid(false)\n      : setIsValid(true)\n  }, [isError.name, isError.link])\n\n  const blurHandler = (event: any) => {\n    switch (event.target.name) {\n      case 'placeName':\n        setIsDirty({...isDirty, name: true});\n        break\n      case 'placePhotoLink':\n        setIsDirty({...isDirty, link: true});\n        break\n    }\n  }\n\n  const [isFetching, setIsFetching] = useState<boolean>(false);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    switch (event.target.name) {\n      case 'placeName':\n        changePlaceName(event.target.value);\n        const nameRegex = /([A-Za-z]|[А-ЯЁа-яё])/gi\n        !nameRegex.test(event.target.value)\n          ? setIsError({...isError, name: 'Введите корректное название'})\n          : setIsError({...isError, name: ''})\n        break\n      case 'placePhotoLink':\n        changePlacePhotoLink(event.target.value);\n        const linkRegex = /(^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w.-]*)*\\/?$)/\n        !linkRegex.test(event.target.value)\n          ? setIsError({...isError, link: 'Введите корректную ссылку'})\n          : setIsError({...isError, link: ''})\n        break\n    }\n  };\n\n  const handleFormSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsFetching(true);\n    await putDataToDB({\n      placeName,\n      placePhotoLink,\n      date: new Date().toLocaleDateString(),\n      likesCount: 0,\n    });\n    changePlaceName('');\n    changePlacePhotoLink('');\n    cardPopupVisible();\n    dispatch(loadDataAC());\n    setIsFetching(false);\n  };\n\n  return (\n    <>\n      <h3 className='popup__title'>Новая карточка</h3>\n      <form\n        id='add-image-form'\n        className='popup__form'\n        onSubmit={handleFormSubmit}\n        noValidate\n      >\n        <div className='popup__input-container'>\n          <div className='alert-message'>\n            {(isDirty.name && isError.name) && <span>{isError.name}</span>}\n          </div>\n          <input\n            name='placeName'\n            onChange={(event) => handleInputChange(event)}\n            onBlur={(event) => blurHandler(event)}\n            value={placeName}\n            type='text'\n            className='popup__input'\n            placeholder='Название'\n          />\n        </div>\n        <div className='popup__input-container'>\n          <div className='alert-message'>\n            {(isDirty.link && isError.link) && <span>{isError.link}</span>}\n          </div>\n          <input\n            name='placePhotoLink'\n            onChange={(event) => handleInputChange(event)}\n            onBlur={(event) => blurHandler(event)}\n            value={placePhotoLink}\n            type='url'\n            className='popup__input'\n            placeholder='Ссылка на картинку'\n          />\n        </div>\n        <button\n          id='submit-add-image-form'\n          type='submit'\n          name='popupButton'\n          className='button popup__button'\n          disabled={!isValid}\n        >\n          {isFetching ?\n            <img src={preloader} alt='Preloader' className='preloader'/>\n            : <i className='material-icons'>add</i>}\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default AddCardPopupForm;","import '../PopupStyles/PopupStyles.css';\n\nimport React from 'react';\nimport cn from 'classnames';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {ICardFormState} from '../../../interfaces/interfaces';\nimport {changePlaceLinkInputAC, changePlaceNameInputAC} from '../../../store/actionCreators/actionCreators';\nimport AddCardPopupForm from \"../AddCardPopupForm/AddCardPopupForm\";\n\ninterface IPopupProps {\n  changePlaceName(arg: string): void;\n  changePlacePhotoLink(arg: string): void;\n  placeName: string;\n  placePhotoLink: string;\n  cardPopupVisible(): void;\n  onShow: { [key: string]: boolean };\n}\n\ntype TFormState = {\n  cardData: ICardFormState;\n};\n\nconst AddCardPopup: React.FC<IPopupProps> = (props) => {\n\n  const {cardPopupVisible, changePlaceName, changePlacePhotoLink, onShow} = props;\n\n  const handlePopupClose = () => {\n    changePlaceName('');\n    changePlacePhotoLink('');\n    cardPopupVisible();\n  };\n\n  const popupClasses = cn(\n    'popup', {\n      'popup_is-shown': onShow.cardPopup,\n    }\n  );\n\n  return (\n    <div className={popupClasses}>\n      <div className='popup__content'>\n        <i onClick={handlePopupClose} className='material-icons popup__close'>clear</i>\n        <AddCardPopupForm data={props}/>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: TFormState) => {\n  return {\n    placeName: state.cardData.placeName,\n    placePhotoLink: state.cardData.placePhotoLink,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    changePlaceName: bindActionCreators(changePlaceNameInputAC, dispatch),\n    changePlacePhotoLink: bindActionCreators(changePlaceLinkInputAC, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCardPopup);","import React, {useEffect, useState} from 'react';\nimport { setDataToLocalStorage } from '../../../services/localStorage.service';\nimport {loadStorageDataAC} from '../../../store/actionCreators/actionCreators';\nimport store from '../../../store/store';\nimport {connect} from 'react-redux';\nimport preloader from '../../../images/preloader-white.svg';\n\ninterface IPopupProps {\n  data: {\n    userName: string;\n    userJob: string;\n    changeUserName(arg: string): void;\n    changeUserJob(arg: string): void;\n    userPopupVisible(): void\n  },\n}\n\nconst dispatch = (action: any) => store.dispatch(action);\n\nconst EditUserPopupForm: React.FC<IPopupProps> = (props) => {\n\n  const {userName, userJob, changeUserName, changeUserJob, userPopupVisible} = props.data\n\n  const [isFetching, setIsFetching] = useState<boolean>(false);\n  const [isDirty, setIsDirty] = useState<{ [key: string]: boolean }>({name: false, link: false});\n  const [isError, setIsError] = useState<{ [key: string]: string }>({name: 'Поле не должно быть пустым', job: 'Поле не должно быть пустым'});\n  const [isValid, setIsValid] = useState<boolean>(false)\n\n  useEffect(() => {\n    (isError.name || isError.job)\n      ? setIsValid(false)\n      : setIsValid(true)\n  }, [isError.name, isError.job])\n\n  const blurHandler = (event: any) => {\n    switch (event.target.name) {\n      case 'userName':\n        setIsDirty({...isDirty, name: true});\n        break\n      case 'userJob':\n        setIsDirty({...isDirty, job: true});\n        break\n    }\n  }\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    switch (event.target.name) {\n      case 'userName':\n        changeUserName(event.target.value)\n        const nameRegex = /([A-Za-z]|[А-ЯЁа-яё])/gi\n        !nameRegex.test(event.target.value)\n          ? setIsError({...isError, name: 'Введите корректное имя'})\n          : setIsError({...isError, name: ''})\n          break\n      case 'userJob':\n        changeUserJob(event.target.value)\n        const jobRegex = /([A-Za-z]|[А-ЯЁа-яё])/gi\n        !jobRegex.test(event.target.value)\n          ? setIsError({...isError, job: 'Введите корректную информацию'})\n          : setIsError({...isError, job: ''})\n          break\n    }\n  }\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsFetching(true)\n    setDataToLocalStorage(userName, userJob)\n    dispatch(loadStorageDataAC())\n    userPopupVisible()\n    setIsFetching(false)\n  }\n\n  return (\n    <>\n      <h3 className='popup__title'>Редактировать</h3>\n      <form\n        onSubmit={handleFormSubmit}\n        id='edit-user-form'\n        className='popup__form'\n      >\n        <div className='popup__input-container'>\n          <div className='alert-message'>\n            {(isDirty.name && isError.name) && <span>{isError.name}</span>}\n          </div>\n          <input\n            onChange={handleInputChange}\n            onBlur={blurHandler}\n            value={userName}\n            type='text'\n            name='userName'\n            className='popup__input'\n            placeholder='Имя, фамилия'\n          />\n        </div>\n        <div className='popup__input-container'>\n          <div className='alert-message'>\n            {(isDirty.job && isError.name) && <span>{isError.job}</span>}\n          </div>\n          <input\n            onChange={handleInputChange}\n            onBlur={blurHandler}\n            value={userJob}\n            type='text'\n            name='userJob'\n            className='popup__input'\n            placeholder='Род занятий или профессия'\n          />\n        </div>\n        <button\n          disabled={!isValid}\n          type='submit'\n          name='popupButton'\n          className='button popup__button'>\n          {isFetching ?\n            <img src={preloader} alt='Preloader' className='preloader'/>\n            : 'Сохранить'}</button>\n      </form>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    user: state.userStorageData.user\n  }\n}\n\nexport default connect(mapStateToProps)(EditUserPopupForm)\n","import '../PopupStyles/PopupStyles.css';\n\nimport React from 'react';\nimport cn from 'classnames';\nimport {IUserFormState} from '../../../interfaces/interfaces';\nimport {bindActionCreators} from 'redux';\nimport {changeUserJobInputAC, changeUserNameInputAC} from '../../../store/actionCreators/actionCreators';\nimport {connect} from 'react-redux';\nimport EditUserPopupForm from \"../EditUserPopupForm/EditUserPopupForm\";\n\ninterface IPopupProps {\n  onShow: { [key: string]: boolean };\n  changeUserName(arg: string): void;\n  changeUserJob(arg: string): void;\n  userName: string;\n  userJob: string;\n  userPopupVisible(): void;\n}\n\ntype TFormState = {\n  userData: IUserFormState;\n};\n\nconst EditUserPopup: React.FC<IPopupProps> = (props) => {\n\n  const {userPopupVisible, onShow} = props;\n\n  const handlePopupClose = () => {\n    userPopupVisible();\n  };\n\n  const popupClasses = cn(\n    'popup', {\n      'popup_is-shown': onShow.userPopup,\n    }\n  );\n\n  return (\n    <div id='addImagePopup' className={popupClasses}>\n      <div className='popup__content'>\n        <i onClick={handlePopupClose} className='material-icons popup__close'>clear</i>\n        <EditUserPopupForm data={props}/>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: TFormState) => {\n  return {\n    userName: state.userData.userName,\n    userJob: state.userData.userJob,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    changeUserName: bindActionCreators(changeUserNameInputAC, dispatch),\n    changeUserJob: bindActionCreators(changeUserJobInputAC, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUserPopup);","import './App.css';\n\nimport React, {useEffect, useState} from 'react';\nimport store from './store/store';\nimport Header from './components/Header/Header';\nimport Profile from './components/Profile/Profile';\nimport CardList from './components/CardList/CardList';\nimport {loadDataAC, loadStorageDataAC} from './store/actionCreators/actionCreators';\nimport AddCardPopup from './components/Popups/AddCardPopup/AddCardPopup';\nimport EditUserPopup from './components/Popups/EditUserPopup/EditUserPopup';\n\ntype TUseState = {\n  [key: string]: boolean\n}\n\nconst dispatch = (action: any) => store.dispatch(action);\n\nconst App: React.FC = () => {\n\n  useEffect(() => {\n    dispatch(loadDataAC());\n  }, []);\n\n  useEffect(() => {\n    dispatch(loadStorageDataAC());\n  }, []);\n\n  const [isShown, setIsShown] = useState<TUseState>({cardPopup: false, userPopup: false});\n\n  const addCardPopupVisible = () =>\n    !isShown.cardPopup\n      ? setIsShown({...isShown, cardPopup: true})\n      : setIsShown({...isShown, cardPopup: false});\n\n  const editUserPopupVisible = () =>\n    !isShown.userPopup\n      ? setIsShown({...isShown, userPopup: true})\n      : setIsShown({...isShown, userPopup: false});\n\n  return (\n    <div className='root'>\n      <Header/>\n      <Profile cardPopupVisible={addCardPopupVisible} userPopupVisible={editUserPopupVisible}/>\n      <CardList/>\n      <AddCardPopup onShow={isShown} cardPopupVisible={addCardPopupVisible}/>\n      <EditUserPopup onShow={isShown} userPopupVisible={editUserPopupVisible}/>\n    </div>\n  );\n};\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}